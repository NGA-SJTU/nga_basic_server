<?xml version="1.0"?>
<launch>

  <!-- MoveIt -->
  <param name="robot_description_semantic" textfile="$(find webots_ros)/config/j2s6s200.srdf" />
  <arg name="scene_file" default="$(find webots_ros)/config/moma.scene"/> 
  <arg name="rviz"  default="false"/>

  <rosparam>
    robot_description_kinematics:
      <!-- arm:
        kinematics_solver: kdl_kinematics_plugin/KDLKinematicsPlugin
        kinematics_solver_search_resolution: 0.005
        kinematics_solver_timeout: 0.005 -->
      arm:
        kinematics_solver: trac_ik_kinematics_plugin/TRAC_IKKinematicsPlugin
        kinematics_solver_search_resolution: 0.005
        kinematics_solver_timeout: 0.005
        kinematics_solver_attempts: 3
    move_group:
      planning_plugin: ompl_interface/OMPLPlanner
      request_adapters: 
        default_planner_request_adapters/AddTimeParameterization
        default_planner_request_adapters/ResolveConstraintFrames
        default_planner_request_adapters/FixWorkspaceBounds
        default_planner_request_adapters/FixStartStateBounds
        default_planner_request_adapters/FixStartStateCollision
        default_planner_request_adapters/FixStartStatePathConstraints
      capabilities:
        move_group/MoveGroupCartesianPathService
        move_group/MoveGroupExecuteTrajectoryAction
        move_group/MoveGroupKinematicsService
        move_group/MoveGroupMoveAction
        move_group/MoveGroupPickPlaceAction
        move_group/MoveGroupPlanService
        move_group/MoveGroupQueryPlannersService
        move_group/MoveGroupStateValidationService
        move_group/MoveGroupGetPlanningSceneService
        move_group/ApplyPlanningSceneService
        move_group/ClearOctomapService
      start_state_max_bounds_error: 0.1
      allowed_execution_duration_scaling: 1.2
      allowed_goal_duration_margin: 0.5
      moveit_controller_manager: moveit_simple_controller_manager/MoveItSimpleControllerManager
      moveit_manage_controllers: true
      controller_list:
        - name: position_arm_trajectory_controller
          action_ns: follow_joint_trajectory
          default: true
          type: FollowJointTrajectory
          joints:
            - j2s6s200_joint_1
            - j2s6s200_joint_2
            - j2s6s200_joint_3
            - j2s6s200_joint_4
            - j2s6s200_joint_5
            - j2s6s200_joint_6
        - name: position_gripper_trajectory_controller
          action_ns: follow_joint_trajectory
          type: FollowJointTrajectory
          default: true
          joints:
            - j2s6s200_joint_finger_1
            - j2s6s200_joint_finger_2
        - name: position_pantilt_trajectory_controller
          action_ns: follow_joint_trajectory
          type: FollowJointTrajectory
          default: true
          joints:
            - JT_Pantilt_PanLink
            - JT_Pantilt_TiltLink
        - name: position_armbase_trajectory_controller
          action_ns: follow_joint_trajectory
          type: FollowJointTrajectory
          default: true
          joints:
            - JT_ArmBase
      planning_scene_monitor:
        publish_planning_scene: true
        publish_geometry_updates: true
        publish_state_updates: true
        publish_transforms_updates: true
  </rosparam>
  <rosparam command="load" ns="move_group" file="$(find webots_ros)/config/ompl_planning.yaml"/>
  <node name="move_group" pkg="moveit_ros_move_group" type="move_group" respawn="true" output="screen" respawn_delay="5" />
  <node name = "moveit_publish_scene_from_text" pkg= "moveit_ros_planning" type = "moveit_publish_scene_from_text" args= "$(arg scene_file)"/>
  <arg name="debug" default="false" />
  <arg unless="$(arg debug)" name="launch_prefix" value="" />
  <arg     if="$(arg debug)" name="launch_prefix" value="gdb --ex run --args" />

  <group if="$(arg rviz)">  
    <arg name="rviz_config" default="$(find webots_ros)/rviz/mobile_arm_moveit.rviz" />
    <arg     if="$(eval rviz_config=='')" name="command_args" value="" />
    <arg unless="$(eval rviz_config=='')" name="command_args" value="-d $(arg rviz_config)" />

    <node name="$(anon rviz)" launch-prefix="$(arg launch_prefix)" pkg="rviz" type="rviz" respawn="false"
          args="$(arg command_args)" output="screen">
    </node>
  </group>

</launch>
